name: clangd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        repository: llvm/llvm-project
    - name: Install essential packages (Ubuntu)
      if: ${{ contains(matrix.os, 'ubuntu') }}
      run: sudo apt-get install -y ninja-build

    - name: Install essential packages (Windows)
      if: ${{ contains(matrix.os, 'windows') }}
      run: choco install ninja

    - name: Install essential packages (MacOS)
      if: ${{ contains(matrix.os, 'macos') }}
      run: brew install ninja
    
    - name: Build
      run: |
        mkdir build
        cd build
        cmake -G Ninja ../llvm/ -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"
        cmake --build ./ --target clangd
        cd ..

    - name: Rename file (Ubuntu, MacOS)
      run: zip -r ${{ matrix.os }}-${{ matrix.arch }}.zip ./build 

    - name: Rename file (Windows)
      run: powershell Compress-Archive -Path ./build -DestinationPath ${{ matrix.os }}-${{ matrix.arch }}.zip

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: my-artifact
        path: ${{ matrix.os }}-${{ matrix.arch }}.zip
